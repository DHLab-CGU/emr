}
errorICD
if(wrongICDType == "format" | wrongICDType == "version"){
wrongType <- paste0("Wrong ", wrongICDType)
if(exists("errorICD")){errorICD <- errorICD[WrongType == wrongType,]}
else{errorICD <- errorFile[WrongType == wrongType,]}
title <- paste0(title," (",wrongType,")")
}else if (wrongICDType != "format" && wrongICDType != "version" && wrongICDType != "all"){
stop("'please enter `format`,`version`, `all` for 'wrongICDType'", call. = FALSE)
}
if(exists("errorICD")){errorFile <- errorICD}
FileSize <- nrow(errorFile)
errorData <- errorFile[, c("CumCount", "Number") :=
list(cumsum(count), 1:FileSize),][Number > TopN, c("CumCount", "count", "ICD") :=
list(max(CumCount), sum(count),"Others"),][!duplicated(ICD),]
errorData
if(!Others){
errorData <- errorData[!ICD == "Others",]
}
errorData <- errorData[, c("CumCountPerc","ICD") := list(paste0(round(CumCount/max(CumCount)*100,2),"%"),factor(ICD,levels = unique(ICD))),]
errorData
errorData
errorData[,c(1,2,8,3:5)]
devtools::document()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
plot2$sigCate
plot2$sigCate
selectedCaseFile <- selectCases(DxDataFile = sampleDxFile,
idColName = ID,
　　 icdColName = ICD,
　　dateColName = Date,
icd10usingDate = "2015/10/01",
groupDataType = ccslvl2,
caseCondition = "Diseases of the urinary system",
caseCount = 1)
groupedDataWide <- groupedDataLongToWide(sampleDxFile, ID, ICD, Date,
icd10usingDate = "2015-10-01",
groupDataType = elix,
selectedCaseFile = selectedCaseFile)
plot2 <- plot_groupedData(groupedDataWide = groupedDataWide,
TopN = 10,
limitFreq = 0.01,
pvalue = 0.05)
plot2$sigCate
Plot_error2 <- plot_errorICD(errorFile = error$Error,
ICDVersion = 9,
wrongICDType = all,
groupICD = TRUE,
Others = TRUE,
TopN = 3)
Plot_error2$ICD
devtools::check()
pkgdown::build_site()
AHRQ <- IcdDxToComorbid(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
comorbidMethod = AHRQ)
AHRQ$groupedDT[160:164]
head(AHRQ$summarised_groupedDT, 5)
pkgdown::build_site()
devtools::document()
devtools::check()
devtools::check()
pkgdown::build_site()
selectedCaseFile <- selectCases(DxDataFile = sampleDxFile,
idColName = ID,icdColName = ICD, dateColName = Date,
icd10usingDate = "2015/10/01",
groupDataType = ccslvl2,
caseCondition = "Diseases of the urinary system",
caseCount = 1)
groupedDataWide <- groupedDataLongToWide(sampleDxFile, ID, ICD, Date,
icd10usingDate = "2015-10-01",
groupDataType = elix,
selectedCaseFile = selectedCaseFile)
plot2 <- plot_groupedData(groupedDataWide = groupedDataWide,
TopN = 10,
limitFreq = 0.01,
pvalue = 0.05)
plot2$sigCate
devtools::check()
pkgdown::build_site()
devtools::document()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
devtools::check()
pkgdown::build_site()
knitr::opts_chunk$set(collapse = T, comment = "#>")
options(tibble.print_min = 4L, tibble.print_max = 4L)
devtools::install_github("DHLab-CGU/emr")
library(emr)
groupedData_Wide <- groupedDataLongToWide(sampleDxFile, ID, ICD, Date, "2015/10/01", groupDataType = Charlson)
groupedData_Wide <- groupedDataLongToWide(sampleDxFile, ID, ICD, Date, "2015/10/01", groupDataType = Charlson)
groupedData_Wide <- groupedDataLongToWide(sampleDxFile, ID, ICD, Date, "2015/10/01", groupDataType = Charlson)
groupedData_Wide
groupedData_Wide[1:3,]
groupedData_Wide[1,1]
groupedData_Wide[1:4,1]
groupedData_Wide[,1:4]
devtools::document()
devtools::check()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
short <- IcdDxDecimalToShort(sampleDxFile, ICD, Date, "2015/10/01")\
short <- IcdDxDecimalToShort(sampleDxFile, ICD, Date, "2015/10/01"
short <- IcdDxDecimalToShort(sampleDxFile, ICD, Date, "2015/10/01"
short <- IcdDxDecimalToShort(sampleDxFile, ICD, Date, "2015/10/01"
short <- IcdDxDecimalToShort(sampleDxFile, ICD, Date, "2015/10/01")
short <- IcdDxDecimalToShort(sampleDxFile, ICD, Date, "2015/10/01")
short
tail(short$Error)
devtools::document()
devtools::check()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
sys.time()
Sys.time()
devtools::check()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
knitr::opts_chunk$set(collapse = T, comment = "#>")
options(tibble.print_min = 4L, tibble.print_max = 4L)
devtools::install_github("DHLab-CGU/emr")
library(emr)
Plot_error2 <- plot_errorICD(errorFile = error$Error,
ICDVersion = 9,
wrongICDType = all,
groupICD = TRUE,
Others = TRUE,
TopN = 3)
Plot_error2$ICD
knitr::opts_chunk$set(collapse = T, comment = "#>")
options(tibble.print_min = 4L, tibble.print_max = 4L)
devtools::install_github("DHLab-CGU/emr")
library(emr)
# Short
head(ICD9DxwithTwoFormat$Short)
# Decimal
head(ICD9DxwithTwoFormat$Decimal)
# Short
head(ICD10DxwithTwoFormat$Short)
# Decimal
head(ICD10DxwithTwoFormat$Decimal)
head(sampleDxFile)
# Short to decimal
decimal <- IcdDxShortToDecimal(DxDataFile = sampleDxFile,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015/10/01")
decimal$ICD[6:10]
# Decimal to short
short <- IcdDxDecimalToShort(DxDataFile = sampleDxFile,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015/10/01")
short$ICD[6:10]
sample <- IcdDxShortToDecimal(DxDataFile = sampleDxFile,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015/10/01")
sample$Error
## ICD to CCS category's description
CCS_description <- IcdDxToCCS(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = TRUE)
head(CCS_description$groupedDT, 5)
head(CCS_description$summarised_groupedDT, 5)
## ICD to CCS category
CCS_category <- IcdDxToCCS(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = FALSE)
## ICD to CCS multiple level 2 description
CCSlvl_description <- IcdDxToCCSLvl(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
CCSLevel = 2,
isDescription = TRUE)
head(CCSlvl_description$groupedDT, 5)
head(CCSlvl_description$summarised_groupedDT, 5)
## ICD to CCS multiple level 3 category
CCSLvl_category <- IcdDxToCCSLvl(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
CCSLevel = 3,
isDescription = FALSE)
## ICD to PheWAS
PheWAS <- IcdDxToPheWAS(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = FALSE)
PheWAS$groupedDT[7:11]
PheWAS$summarised_groupedDT[7:11]
# CustomGroupingTable
groupingTable <- data.frame(Group = rep("Chronic kidney disease",6),
ICD = c("N181","5853","5854","5855","5856","5859"),
stringsAsFactors = FALSE)
CustomGroup <- IcdDxToCustom(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
CustomGroupingTable = groupingTable)
CustomGroup$groupedDT[10:14]
head(CustomGroup$summarised_groupedDT, 5)
# CustomGroupingTable
grepTable <- data.frame(Group = "Chronic kidney disease",
grepIcd = "^585|^N18",
stringsAsFactors = FALSE)
CustomGrepGroup <- IcdDxToCustomGrep(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
CustomGroupingTable = grepTable)
CustomGrepGroup$groupedDT[10:14]
head(CustomGrepGroup$summarised_groupedDT, 5)
ELIX <- IcdDxToComorbid(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
comorbidMethod = elix)
ELIX$groupedDT[160:164]
head(ELIX$summarised_groupedDT, 5)
AHRQ <- IcdDxToComorbid(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
comorbidMethod = AHRQ)
AHRQ$groupedDT[160:164]
head(AHRQ$summarised_groupedDT, 5)
Charlson <- IcdDxToComorbid(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
comorbidMethod = charlson)
Charlson$groupedDT[160:164]
head(Charlson$summarised_groupedDT, 5)
Case <- selectCases(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
groupDataType = ccslvl2,
icd10usingDate = "2015/10/01",
caseCondition = "Diseases of the urinary system",
caseCount = 1,
CaseName = "Selected")
head(Case)
admissionDate <- patientRecordDate(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date)
head(admissionDate)
indexDateTable <- data.frame(ID = c("A0","B0","C0","D0"),
indexDate = c("2009-07-25", "2015-12-26",
"2015-12-05", "2017-01-29"),
stringsAsFactors = FALSE)
Data <- splitDataByDate(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
indexDateFile = indexDateTable,
Gap = 30)
head(Data, 5)
Era <- getConditionEra(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
gapDate = 30,
groupDataType = ccs,
isDescription = FALSE)
head(Era)
#binary
groupedData_Wide <- groupedDataLongToWide(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = FALSE,
groupDataType = Charlson,
numericOrBinary = B)
head(groupedData_Wide, 5)
# numeric
groupedData_Wide <- groupedDataLongToWide(DxDataFile = sampleDxFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = FALSE,
groupDataType = Charlson,
numericOrBinary = N)
head(groupedData_Wide, 5)
error <- IcdDxDecimalToShort(DxDataFile = sampleDxFile,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015/10/01")
Plot_error1 <- plot_errorICD(errorFile = error$Error,
ICDVersion = all,
wrongICDType = all,
Others = TRUE)
Plot_error1$ICD
Plot_error2 <- plot_errorICD(errorFile = error$Error,
ICDVersion = 9,
wrongICDType = all,
groupICD = TRUE,
Others = TRUE,
TopN = 3)
error <- IcdDxDecimalToShort(DxDataFile = sampleDxFile,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015/10/01")
ICDVersion = 9
groupICD = TRUE
Others = TRUE
wrongICDType = "all"
title <- paste0("Error ICD: Top ",TopN)
Xlabel <- "Error ICD"
if(ICDVersion == "9" | ICDVersion == "10"){
version <- paste0("ICD ", ICDVersion)
errorICD <- errorFile[IcdVersionInFile == version]
title <- paste0("Error ", version, ": Top ",TopN)
Xlabel <- paste0("Error ", version)
}else if(ICDVersion != "9" && ICDVersion != "10" && ICDVersion != "all"){
stop("'please enter `9`,`10`, `all` for 'ICDVersion'", call. = FALSE)
}
if(wrongICDType == "format" | wrongICDType == "version"){
wrongType <- paste0("Wrong ", wrongICDType)
if(exists("errorICD")){errorICD <- errorICD[WrongType == wrongType,]}
else{errorICD <- errorFile[WrongType == wrongType,]}
title <- paste0(title," (",wrongType,")")
}else if (wrongICDType != "format" && wrongICDType != "version" && wrongICDType != "all"){
stop("'please enter `format`,`version`, `all` for 'wrongICDType'", call. = FALSE)
}
if(exists("errorICD")){errorFile <- errorICD}
errorData <- errorFile[,ICDGroup := substr(ICD,1,1),][,c("groupCount","maxICD") := list(sum(count),max(count)), by = "ICDGroup"][count == maxICD,][order(groupCount,decreasing = TRUE),]
errorData <-errorData[,Number :=  1:nrow(errorData),][Number > TopN, c("ICDGroup","groupCount") := list("Others",sum(groupCount)),][!duplicated(ICDGroup),][,c("CumCount","ICDPercInGroup") := list(cumsum(groupCount),paste0(round((count/groupCount)*100,2),"%")),][,-"count"]
errorFile = error$Error
if(ICDVersion == "9" | ICDVersion == "10"){
version <- paste0("ICD ", ICDVersion)
errorICD <- errorFile[IcdVersionInFile == version]
title <- paste0("Error ", version, ": Top ",TopN)
Xlabel <- paste0("Error ", version)
}else if(ICDVersion != "9" && ICDVersion != "10" && ICDVersion != "all"){
stop("'please enter `9`,`10`, `all` for 'ICDVersion'", call. = FALSE)
}
if(wrongICDType == "format" | wrongICDType == "version"){
wrongType <- paste0("Wrong ", wrongICDType)
if(exists("errorICD")){errorICD <- errorICD[WrongType == wrongType,]}
else{errorICD <- errorFile[WrongType == wrongType,]}
title <- paste0(title," (",wrongType,")")
}else if (wrongICDType != "format" && wrongICDType != "version" && wrongICDType != "all"){
stop("'please enter `format`,`version`, `all` for 'wrongICDType'", call. = FALSE)
}
TopN = 10
if(ICDVersion == "9" | ICDVersion == "10"){
version <- paste0("ICD ", ICDVersion)
errorICD <- errorFile[IcdVersionInFile == version]
title <- paste0("Error ", version, ": Top ",TopN)
Xlabel <- paste0("Error ", version)
}else if(ICDVersion != "9" && ICDVersion != "10" && ICDVersion != "all"){
stop("'please enter `9`,`10`, `all` for 'ICDVersion'", call. = FALSE)
}
if(wrongICDType == "format" | wrongICDType == "version"){
wrongType <- paste0("Wrong ", wrongICDType)
if(exists("errorICD")){errorICD <- errorICD[WrongType == wrongType,]}
else{errorICD <- errorFile[WrongType == wrongType,]}
title <- paste0(title," (",wrongType,")")
}else if (wrongICDType != "format" && wrongICDType != "version" && wrongICDType != "all"){
stop("'please enter `format`,`version`, `all` for 'wrongICDType'", call. = FALSE)
}
if(exists("errorICD")){errorFile <- errorICD}
errorData <- errorFile[,ICDGroup := substr(ICD,1,1),][,c("groupCount","maxICD") := list(sum(count),max(count)), by = "ICDGroup"][count == maxICD,][order(groupCount,decreasing = TRUE),]
errorData <-errorData[,Number :=  1:nrow(errorData),][Number > TopN, c("ICDGroup","groupCount") := list("Others",sum(groupCount)),][!duplicated(ICDGroup),][,c("CumCount","ICDPercInGroup") := list(cumsum(groupCount),paste0(round((count/groupCount)*100,2),"%")),][,-"count"]
if(!Others){
errorData <- errorData[!ICDGroup == "Others",]
}
errorData <- errorData[,c("CumCountPerc","ICDGroup") :=
list(paste0(round(CumCount/max(CumCount)*100,2),"%"),factor(ICDGroup,levels = unique(ICDGroup))),]
graph_col <- c("ICDGroup","groupCount")
setnames(errorData,"ICD","MostICDInGroup")
Xlabel <- paste0(Xlabel," (grouped)")
errorData
errorData
ICD <- errorData[,c("ICDGroup","groupCount","CumCountPerc","MostICDInGroup","ICDPercInGroup","WrongType")]
ICD
error <- IcdDxDecimalToShort(DxDataFile = sampleDxFile,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015/10/01")
TopN = 10
title <- paste0("Error ICD: Top ",TopN)
Xlabel <- "Error ICD"
ICDVersion = 9
wrongICDType ="all"
title <- paste0("Error ICD: Top ",TopN)
Xlabel <- "Error ICD"
if(ICDVersion == "9" | ICDVersion == "10"){
version <- paste0("ICD ", ICDVersion)
errorICD <- errorFile[IcdVersionInFile == version]
title <- paste0("Error ", version, ": Top ",TopN)
Xlabel <- paste0("Error ", version)
}else if(ICDVersion != "9" && ICDVersion != "10" && ICDVersion != "all"){
stop("'please enter `9`,`10`, `all` for 'ICDVersion'", call. = FALSE)
}
if(wrongICDType == "format" | wrongICDType == "version"){
wrongType <- paste0("Wrong ", wrongICDType)
if(exists("errorICD")){errorICD <- errorICD[WrongType == wrongType,]}
else{errorICD <- errorFile[WrongType == wrongType,]}
title <- paste0(title," (",wrongType,")")
}else if (wrongICDType != "format" && wrongICDType != "version" && wrongICDType != "all"){
stop("'please enter `format`,`version`, `all` for 'wrongICDType'", call. = FALSE)
}
if(exists("errorICD")){errorFile <- errorICD}
FileSize <- nrow(errorFile)
errorData <- errorFile[, c("CumCount", "Number") :=
list(cumsum(count), 1:FileSize),][Number > TopN, c("CumCount", "count", "ICD") :=
list(max(CumCount), sum(count),"Others"),][!duplicated(ICD),]
errorFile = error$Error
FileSize <- nrow(errorFile)
errorFile
if(ICDVersion == "9" | ICDVersion == "10"){
version <- paste0("ICD ", ICDVersion)
errorICD <- errorFile[IcdVersionInFile == version]
title <- paste0("Error ", version, ": Top ",TopN)
Xlabel <- paste0("Error ", version)
}else if(ICDVersion != "9" && ICDVersion != "10" && ICDVersion != "all"){
stop("'please enter `9`,`10`, `all` for 'ICDVersion'", call. = FALSE)
}
if(wrongICDType == "format" | wrongICDType == "version"){
wrongType <- paste0("Wrong ", wrongICDType)
if(exists("errorICD")){errorICD <- errorICD[WrongType == wrongType,]}
else{errorICD <- errorFile[WrongType == wrongType,]}
title <- paste0(title," (",wrongType,")")
}else if (wrongICDType != "format" && wrongICDType != "version" && wrongICDType != "all"){
stop("'please enter `format`,`version`, `all` for 'wrongICDType'", call. = FALSE)
}
if(exists("errorICD")){errorFile <- errorICD}
FileSize <- nrow(errorFile)
FileSize
errorData <- errorFile[, c("CumCount", "Number") :=
list(cumsum(count), 1:FileSize),][Number > TopN, c("CumCount", "count", "ICD") :=
list(max(CumCount), sum(count),"Others"),][!duplicated(ICD),]
errorData
if(!Others){
errorData <- errorData[!ICD == "Others",]
}
errorData <- errorData[, c("CumCountPerc","ICD") := list(paste0(round(CumCount/max(CumCount)*100,2),"%"),factor(ICD,levels = unique(ICD))),]
errorData
errorData
ICD <- errorData[,c("ICD","count","CumCountPerc","IcdVersionInFile","WrongType","Suggestion")]
ICD
devtools::document()
devtools::check()
pkgdown::build_site()
devtools::document()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
knitr::opts_chunk$set(collapse = T, comment = "#>")
options(tibble.print_min = 4L, tibble.print_max = 4L)
devtools::install_github("DHLab-CGU/emr")
library(emr)
ProcedureClass <- IcdPrToProcedureClass(PrDataFile = samplePrFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = FALSE)
head(ProcedureClass$groupedDT, 5)
ProcedureClass <- IcdPrToProcedureClass(PrDataFile = samplePrFile,
idColName = ID,
icdColName = ICD,
dateColName = Date,
icd10usingDate = "2015-10-01",
isDescription = TRUE)
pkgdown::build_site()
pkgdown::build_site()
devtools::build() #tar.gz file
devtools::document()
devtools::check()
pkgdown::build_site()
devtools::build() #tar.gz file
devtools::document()
devtools::check()
devtools::document()
devtools::check()
