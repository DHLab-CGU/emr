#   geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
# dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
# ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
# dignosticCate_graph <- g +
#   geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
#   guides(fill = FALSE, color = FALSE) +
#   coord_flip() +
#   xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
#   theme_bw() +
#   theme(axis.text.y = element_text(size = 10,face = "bold"),
#         axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
# groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
#                          groupedDataWide[, c(1,ncol(groupedDataWide))])
# groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,value := as.integer(value),][,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
# g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
#   geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
# dignosticCate_graph <- g +
#   geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
#   guides(fill = FALSE, color = FALSE) +
#   coord_flip() +
#   xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
#   theme_bw() +
#   theme(axis.text.y = element_text(size = 10,face = "bold"),
#         axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
# groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
#                          groupedDataWide[, c(1,ncol(groupedDataWide))])
# groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,value := as.integer(value),][,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
# groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,value := as.integer(value),][,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,value := as.integer(value),][,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
# return(list(graph = dignosticCate_graph,
#             sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
# return(list(graph = dignosticCate_graph,
#             sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
pvalue <- c()
ggtitle <- "diagnostic category in GroupedData"
if(names(groupedDataWide)[ncol(groupedDataWide)] == "selectedCase"){
groupedDataWide <- cbind(groupedDataWide[, -c(1,ncol(groupedDataWide))]*1,
groupedDataWide[, c(1,ncol(groupedDataWide))])
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "selectedCase",variable.name = "category", value.name = "value")
# groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value), by = list(selectedCase, category)]
#
# caseNum <- sum(!grepl("non|[*]",groupedDataWide$group))
# controlNum <- sum(grepl("non",groupedDataWide$group))
# caseDataLong <- groupedDataLong[!grepl("non|[*]",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/caseNum)*100,2),"%")]
# controlDataLong <- groupedDataLong[grepl("non",groupedDataLong$selectedCase),][,catePerc := paste0(round((count/controlNum)*100,2),"%")]
#
# for(cat in 1:nrow(caseDataLong)){
#   chisq <- rbind(c(caseDataLong$count[cat], caseNum-caseDataLong$count[cat]),
#                  c(controlDataLong$count[cat], controlNum - controlDataLong$count[cat]))
#   pvalue[[length(pvalue)+1]] <- chisq.test(chisq,simulate.p.value = T)$p.value < 0.001
# }
# dignosticCate <- rbind(caseDataLong[pvalue,],controlDataLong[pvalue,])[order(catePerc,decreasing = T)]
# dignosticCate <- dignosticCate[,c("group","category") :=
#                                  list(factor(group, levels = unique(dignosticCate$group)),
#                                       factor(category, levels = unique(dignosticCate$category))),]
#
g <- ggplot(dignosticCate, aes(fill =  group, y = count, x = category, group = group)) +
geom_text(aes(label = catePerc), vjust = -0.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
}else{
groupedDataWide[,-1] <- groupedDataWide[,-1]*1
groupedDataWide$group <- "noGroup"
groupedDataLong <- melt(groupedDataWide[,-1], id.vars = "group",variable.name = "category", value.name = "value")
groupedDataLong <- as.data.table(groupedDataLong)[,list(count = sum(value)), by = list(group, category)][order(count)][,catePerc := round(count/nrow(groupedDataWide)*100,2)][,-"group"][catePerc >= limitPatient,][,catePerc := paste0(catePerc,"%"),]
groupedDataLong <- groupedDataLong[][,c("category","Number") :=
list(factor(category, levels = category),nrow(groupedDataLong):1),][Number <= Ranking,]
g <- ggplot(groupedDataLong, aes(y = count, x = category)) +
geom_text(aes(label = catePerc), vjust = -.5, hjust = -0.5, size = 2.5, position = position_dodge(width = 1))
dignosticCate <- groupedDataLong[,-"Number"][order(count,decreasing = T)]
ggtitle <- paste0(ggtitle,": Top ",Ranking)
}
dignosticCate_graph <- g +
geom_bar(position="dodge", stat="identity", aes(fill = Number)) +
guides(fill = FALSE, color = FALSE) +
coord_flip() +
xlab("diagnostic category") + ylab("count of diagnostic category") + ggtitle(ggtitle) +
theme_bw() +
theme(axis.text.y = element_text(size = 10,face = "bold"),
axis.text.x = element_text(size = 10,face = "bold"))
return(list(graph = dignosticCate_graph,
sigCate = dignosticCate))
}
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
plot_groupedData <- function(groupedDataWide, Ranking = 10, limitPatient = 0.01){
setwd("~/emr")
devtools::document()
devtools::check()
