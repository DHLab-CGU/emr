icd10DNA <- merge(icd10D[is.na(Short),-"Short"],ICD9DxwithTwoFormat,by.x = "ICD",by.y = "Decimal",all.x = T)
icd9DwrongFormat <- icd9DNA[is.na(Short), list(count = .N),by = ICD]
icd10DwrongFormat <- icd10DNA[is.na(Short), list(count = .N),by = ICD]
icd9DWrongVer <- icd9DNA[!is.na(Short), list(count = .N),by = ICD]
icd10DWrongVer <- icd10DNA[!is.na(Short), list(count = .N),by = ICD]
if(nrow(icd9DwrongFormat) > 0){
wrongFormatMsg_D <- icd9DwrongFormat[,IcdVersionInFile:="ICD 9"]
wrongFormat_D <- icd9DNA[is.na(Short),-"Short"]
if(nrow(icd10DwrongFormat) > 0){
icd10DwrongFormat <- icd10DwrongFormat[,IcdVersionInFile:="ICD 10"]
wrongFormatMsg_D <- rbind(wrongFormatMsg_D,icd10DwrongFormat)
wrongFormat_D <- rbind(wrongFormat_D, icd10DNA[is.na(Short),-"Short"])
}
}else if(nrow(icd10DwrongFormat) > 0){
wrongFormatMsg_D <- icd10DwrongFormat[,IcdVersionInFile:="ICD 10"]
wrongFormat_D <- icd10DNA[is.na(Short),-"Short"]
}else{
wrongFormatMsg_D <- NA
wrongFormat_D <- NA
}
if(nrow(icd9DWrongVer) > 0){
wrongVersionMsg_D <- icd9DWrongVer[,IcdVersionInFile:="ICD 9"]
wrongVersion_D <- icd9DNA[!is.na(Short),-"Short"]
if(nrow(icd10DWrongVer) > 0){
icd10DWrongVer <- icd10DWrongVer[,IcdVersionInFile:="ICD 10"]
wrongVersionMsg_D <- rbind(wrongVersionMsg_D,icd10DWrongVer)
wrongVersion_D <- rbind(wrongVersion_D,icd10DNA[!is.na(Short),-"Short"])
}
}else if(nrow(icd10DWrongVer) > 0){
wrongVersionMsg_D <- icd10DWrongVer[,IcdVersionInFile:="ICD 10"]
wrongVersion_D <- icd10DNA[!is.na(Short),-"Short"]
}else{
wrongVersionMsg_D <-NA
wrongVersion_D <- NA
}
}else{
wrongFormatMsg_D <- NA
wrongFormat_D <- NA
wrongVersionMsg_D <-NA
wrongVersion_D <- NA
}
icd_Short <- DxDataFile[!icd_Decimal, on = "Number"]
icd9S <- merge(icd_Short[Date < icd10usingDate], ICD9DxwithTwoFormat, by.x = "ICD", by.y = "Short", all.x = T)
icd10S <- merge(icd_Short[Date >= icd10usingDate], ICD10DxwithTwoFormat, by.x = "ICD", by.y = "Short", all.x = T)
if(nrow(icd9S[is.na(Decimal),-"Decimal"]) > 0 | nrow(icd10S[is.na(Decimal),-"Decimal"]) > 0){
icd9SNA <- merge(icd9S[is.na(Decimal),-"Decimal"], ICD10DxwithTwoFormat,by.x = "ICD",by.y = "Short",all.x = T)
icd10SNA <- merge(icd10S[is.na(Decimal),-"Decimal"], ICD9DxwithTwoFormat,by.x = "ICD",by.y = "Short",all.x = T)
icd9SwrongFormat <- icd9SNA[is.na(Decimal), list(count = .N),by = ICD]
icd10SwrongFormat <- icd10SNA[is.na(Decimal), list(count = .N),by = ICD]
icd9SWrongVer <- icd9SNA[!is.na(Decimal), list(count = .N),by = ICD]
icd10SWrongVer <- icd10SNA[!is.na(Decimal), list(count = .N),by = ICD]
if(nrow(icd9SwrongFormat) > 0){
wrongFormatMsg_S <- icd9SwrongFormat[,IcdVersionInFile:="ICD 9"]
wrongFormat_S <- icd9SNA[is.na(Decimal),-"Decimal"]
if(nrow(icd10SwrongFormat) > 0){
icd10SwrongFormat<- icd10SwrongFormat[,IcdVersionInFile:="ICD 10"]
wrongFormatMsg_S<- rbind(wrongFormatMsg_S,icd10SwrongFormat)
wrongFormat_S <- rbind(wrongFormat_S,icd10SNA[is.na(Decimal),-"Decimal"])
}
}else if(nrow(icd10SwrongFormat) > 0){
wrongFormatMsg_S<- icd10SwrongFormat[,IcdVersionInFile:="ICD 10"]
wrongFormat_S <- icd10SNA[is.na(Decimal),-"Decimal"]
}else{
wrongFormatMsg_S<-NA
wrongFormat_S <- NA
}
if(nrow(icd9SWrongVer) > 0){
wrongVersionMsg_S <-icd9SWrongVer[,IcdVersionInFile:="ICD 9"]
wrongVersion_S <- icd9SNA[!is.na(Decimal),-"Decimal"]
if(nrow(icd10SWrongVer) > 0){
icd10SWrongVer <- icd10SWrongVer[,IcdVersionInFile:="ICD 10"]
wrongVersionMsg_S <- rbind(wrongVersionMsg_S,icd10SWrongVer)
wrongVersion_S <- rbind(wrongVersion_S,icd10SNA[!is.na(Decimal),-"Decimal"])
}
}else if(nrow(icd10SWrongVer) > 0){
wrongVersionMsg_S <- icd10SWrongVer[,IcdVersionInFile:="ICD 10"]
wrongVersion_S <- icd10SNA[!is.na(Decimal),-"Decimal"]
}else{
wrongVersionMsg_S <-NA
wrongVersion_S <- NA
}
}else{
wrongFormatMsg_S<-NA
wrongFormat_S <- NA
wrongVersionMsg_S <-NA
wrongVersion_S <- NA
}
if(!is.null(nrow(wrongFormat_D))){
allWrongFormat <- wrongFormat_D
allWrongFormatMsg <- wrongFormatMsg_D[,WrongType:="Wrong format"][order(count,decreasing = T),]
if(!is.null(nrow(wrongFormat_S))){
allWrongFormat <- rbind(allWrongFormat,wrongFormat_S)
wrongFormatMsg_S <- wrongFormatMsg_S[,WrongType:="Wrong format"]
allWrongFormatMsg<- rbind(allWrongFormatMsg,wrongFormatMsg_S)[order(count,decreasing = T),]
}
}else if(!is.null(nrow(wrongFormat_S))){
allWrongFormat <- wrongFormat_S
allWrongFormatMsg<- wrongFormatMsg_S[,WrongType:="Wrong format"][order(count,decreasing = T),]
}else{
allWrongFormat <- NA
allWrongFormatMsg <- NA
}
if(!is.null(nrow(wrongVersion_D))){
allWrongVersion <- wrongVersion_D
allWrongVersionMsg <- wrongVersionMsg_D[,WrongType:="Wrong version"][order(count,decreasing = T),]
if(!is.null(nrow(wrongVersion_S))){
allWrongVersion <- rbind(allWrongVersion, wrongVersion_S)
wrongVersionMsg_S <- wrongVersionMsg_S[,WrongType:="Wrong version"]
allWrongVersionMsg<- rbind(allWrongVersionMsg, wrongVersionMsg_S)[order(count,decreasing = T),]
}
}else if(!is.null(nrow(wrongVersion_S))){
allWrongVersion <- wrongVersion_S
allWrongVersionMsg<- wrongVersionMsg_S[,WrongType:="Wrong version"][order(count,decreasing = T),]
}else{
allWrongVersion <- NA
allWrongVersionMsg <- NA
}
if(!is.null(nrow(allWrongFormat))){
allWrongICD <- allWrongFormat
allWrongICDMsg <- allWrongFormatMsg[order(count,decreasing = T),]
if(!is.null(nrow(allWrongVersion))){
allWrongICD <- rbind(allWrongFormat,allWrongVersion)
allWrongICDMsg <- rbind(allWrongFormatMsg,allWrongVersionMsg)[order(count,decreasing = T),]
}
}else if(!is.null(nrow(allWrongVersion))){
allWrongICD <- allWrongVersion
allWrongICDMsg <- allWrongVersionMsg[order(count,decreasing = T),]
}else{
allWrongICD <- NA
allWrongICDMsg <- NA
}
if(!anyNA(wrongFormatMsg_S) | !anyNA(wrongFormatMsg_D)){
ICD9wrongFormatMsg <- allWrongICDMsg[grepl("format",allWrongICDMsg$WrongType) & grepl("9",allWrongICDMsg$IcdVersionInFile),]
ICD9wrongFormatMsg <- ICD9wrongFormatMsg[,Suggestion :=paste0(ICD9wrongFormatMsg[,ICD],"9")]
ICD9wrongFormatSuggested <- rbind(merge(ICD9wrongFormatMsg[grepl("[.]",ICD9wrongFormatMsg$Suggestion),],
ICD9DxwithTwoFormat,by.x = "Suggestion",by.y = "Decimal",nomatch = T)[,-"Short"],
merge(ICD9wrongFormatMsg[!grepl("[.]",ICD9wrongFormatMsg$Suggestion),],
ICD9DxwithTwoFormat,by.x = "Suggestion",by.y = "Short",nomatch = T)[,-"Decimal"])
noSuggestedWrongFormat <- allWrongICDMsg[!ICD9wrongFormatSuggested,on = c("ICD","IcdVersionInFile")][,Suggestion :=""]
allWrongICDMsg <- rbind(noSuggestedWrongFormat,ICD9wrongFormatSuggested)[order(count,decreasing = TRUE)]
}
DtoS <- rbind(icd9D[!is.na(Short),-"ICD"], icd10D[!is.na(Short),-"ICD"])
setnames(DtoS,"Short","ICD")
StoS <- rbind(icd9S[!is.na(Decimal),-"Decimal"],icd10S[!is.na(Decimal),-"Decimal"])
allShortFormat <- rbind(StoS, DtoS)
if(nrow(allShortFormat) < nrow(DxDataFile)){
if(!is.null(nrow(allWrongFormat))){
message(paste0("Wrong ICD format: total ",nrow(allWrongFormatMsg)," ICD codes (the number of occurrences is in brackets)"))
message(head(allWrongFormatMsg[,list(wrongFormat= paste0(ICD," (",count,")","")),],10))
message(("\t"))
}
if(!is.null(nrow(allWrongVersion))){
message(paste0("Wrong ICD version: total ",nrow(allWrongVersionMsg)," ICD codes (the number of occurrences is in brackets)"))
message(head(allWrongVersionMsg[,list(wrongFormat= paste0(ICD," (",count,")","")),], 10))
message(("\t"))
}
warning('The ICD mentioned above matches to "NA" due to the format or other issues.', call. = F)
warning('"Wrong format" means the ICD has wrong format', call. = F)
warning('"Wrong ICD version" means the ICD classify to wrong ICD version (cause the "icd10usingDate" or other issues)', call. = F)
combine_with_error <- rbind(allWrongICD, allShortFormat)[order(Number),"ICD"]
return(list(ICD = combine_with_error,
Error = allWrongICDMsg))
}else{
return(list(ICD = allShortFormat[order(Number),"ICD"]))
}
}
GroupedData <- DxDataFile[, Short :=IcdDxDecimalToShort(DxDataFile, ICD, Date, icd10usingDate)$ICD]
icd10usingDate <- "2015/10/01"
GroupedData <- DxDataFile[, Short :=IcdDxDecimalToShort(DxDataFile, ICD, Date, icd10usingDate)$ICD]
conditionEra <- GroupedData[nchar(eval(parse(text = paste(conditionSelect)))) >0  & !is.na(eval(parse(text = paste(conditionSelect))))][order(ID,eval(parse(text = paste(conditionSelect))),Date)][,NextDate := c(Date[-1],NA),by = c("ID",conditionSelect)][,diffDay := NextDate-Date]
conditionEra
conditionEra
gapDate = 30
conditionEra$Gap <- c(NA,conditionEra$diffDay[1:(nrow(conditionEra)-1)])
conditionEra
conditionEra[,episode := Gap > gapDate][is.na(episode),episode :=TRUE]
conditionEra
conditionEra <- conditionEra[,episode := Gap > gapDate][is.na(episode),episode :=TRUE][,list(episodecount = cumsum(episode),
firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),by = c("ID",conditionSelect)]
conditionEra
Case
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][is.na(diffDay),diffDay :=0]
Case
Case
Case[,InTimeINR := diffDay >= INRofDayRange[1] & diffDay < INRofDayRange[2],]
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case1
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case1
Case1
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,list(episodecount = cumsum(episode),
firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),by = "ID"]
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,list(count = cumsum(InTimeINR),firstCaseDate = min(Date),endCaseDate = max(Date), count = .N),by = "ID"]
InTimeINR
Case1
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]#[,list(count = cumsum(InTimeINR),firstCaseDate = min(Date),endCaseDate = max(Date), count = .N),by = "ID"]
Case1
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,list(count = cumsum(InTimeINR),firstCaseDate = min(Date),endCaseDate = max(Date), count = .N),by = "ID"]
Case1
conditionEra
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,list(InTimeINRcount = cumsum(InTimeINR),firstCaseDate = min(Date),endCaseDate = max(Date), count = .N),by = "ID"]
Case1
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,list(InTimeINRcount = (1+cumsum(InTimeINR)),firstCaseDate = min(Date),endCaseDate = max(Date), count = .N),by = "ID"]
Case1
Case1 <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := abs(NextDate-Date)][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case1
Case1
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,InTimeINRcount := cousum(Gap),]
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,InTimeINRcount := cousum(Gap),]
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,InTimeINRcount := cumsum(Gap),]
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][,InTimeINRcount := cumsum(Gap)]
Gap
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]#[,InTimeINRcount := cumsum(Gap)]
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]#[,InTimeINRcount := cumsum(Gap)]
Case
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]#[,InTimeINRcount := cumsum(Gap)]
Case
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap :=0][,InTimeINRcount := cumsum(Gap)]#[,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
str(Case)
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap := 0][,InTimeINRcount := cumsum(as.integer(Gap))]#[,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,Gap := NextDate-Date][is.na(Gap),Gap := 0][,InTimeINRcount := cumsum(as.integer(Gap)),by = "ID"]#[,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][is.na(diffDay),diffDay := 0][,Gap := cumsum(as.integer(diffDay)),by = "ID"]#[,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][is.na(diffDay),diffDay := 0][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case
Case
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),by = ID]
Count
Case
CaseCount
CaseCount <- Count[Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ICDNumber = 2
CaseCount <- Count[Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
Case
Count
selectedCase
CaseCount
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
CaseMostICDCount
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
selectedCase
selectedCase
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
ControlCount
Control
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
nonSelectedCase
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param INRofDayRange Determines what is the interval of days of interest for performing the case selection. By default it is set to from 30 to 365 days.
#' @param selectedCaseType Aggregation  of selected cases name. By default it is set to \code{"selected"}.
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, INRofDayRange = c(30, 365), selectedCaseType = "selected"){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
nonSelectedCaseType <- paste0("non",selectedCaseType,sep = "")
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
allData
}
selectCases(grepICD = "^785",
DxDataFile = sampleDxFile,
ID, ICD, Date,
ICDNumber = 2)
Case
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),][order(ID,Date)]
Case
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
selectedCase
selectedCase
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
nonSelectedCase
selectedCase
Control
ControlCount
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param INRofDayRange Determines what is the interval of days of interest for performing the case selection. By default it is set to from 30 to 365 days.
#' @param selectedCaseType Aggregation  of selected cases name. By default it is set to \code{"selected"}.
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, INRofDayRange = c(30, 365), selectedCaseType = "selected"){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
nonSelectedCaseType <- paste0("non",selectedCaseType,sep = "")
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
allData
}
selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
DxDataFile
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
nonSelectedCaseType <- paste0("non",selectedCaseType,sep = "")
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)
nonSelectedCase
selectedCase
allData <- merge(selectedCase,nonSelectedCase,all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
allData
DxDataFile
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
nonSelectedCaseType <- paste0("non",selectedCaseType,sep = "")
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),][order(ID,Date)]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
nonSelectedCase
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType]#[,c(1,2)]
nonSelectedCase
Control
Case
DxDataFile
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param INRofDayRange Determines the interval of days of interest for performing the case selection. By default it is set from 30 to 365 days.
#' @param selectedCaseType Aggregation  of selected cases name. By default it is set to \code{"selected"}.
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
DxDataFile <- rbind(sampleDxFile,data.table(ID = "D",ICD = "0011",Date = as.Date("2014/10/01")))
DxDataFile
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
nonSelectedCaseType <- paste0("non",selectedCaseType,sep = "")
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),][order(ID,Date)]
Control <- DxDataFile[!Case, on = "ID"][,selectedCase := nonSelectedCaseType][,-c("ICD","Date")]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
ControlCount <- Count[!CaseCount, on = "ID"][,-"InTimeINR"]
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
setnames(selectedCase,"ICD","MostCommonICD")
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType]#[,c(1,2)]
nonSelectedCase
nonSelectedCase
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,c(1,2)]
nonSelectedCase
allData <- merge(selectedCase,nonSelectedCase,all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
allData
allData <- merge(selectedCase,nonSelectedCase,by = names(nonSelectedCase),all=T)[!duplicated(ID),][order(MostCommonICDCount,decreasing = T),]
allData
nonSelectedCase <- merge(Control,ControlCount,"ID",all = T)[,selectedCase := nonSelectedCaseType][,list(ID,selectedCase)]
nonSelectedCase
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][is.na(diffDay),diffDay := 0][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],]
Case
Case
Count <- Case[,list(InTimeINRcount = 1+(cumsum(InTimeINR)), firstCaseDate = min(Date), endCaseDate = max(Date), count = .N),by = "ID"]
Count
Count <- Case[,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date), count = .N),by = "ID"]
Count
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),diffDay := FALSE]
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE]
Case
Count <- Case[,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date), count = .N),by = "ID"]
Count
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)][,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date), count = .N),by = "ID"]
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)]
Case
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date), count = .N),by = "ID"]
CaseCount
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = "ID"]
CaseCount
CaseMostICDCount <- Case[,list(MostCommonICDCount = .N),by = list(ID,ICD)][order(MostCommonICDCount,decreasing = T),]
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")[,selectedCase := selectedCaseType]
CaseMostICDCount
CaseCount
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")#[,selectedCase := selectedCaseType]
CaseCount
CaseMostICDCount
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)]
Case
Case <- DxDataFile[grepl(grepICD, DxDataFile$ICD),][order(ID,Date)]
Count <- Case[,list(firstCaseDate = min(Date),endCaseDate = max(Date),Count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),]
CaseCount <- Count[,InTimeINR := period >= INRofDayRange[1] & period < INRofDayRange[2],][Count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
Case
Count
CaseCount
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)]
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = "ID"]
CaseCount
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = "ID"][order(ID)][!duplicated(ID),]
CaseCount
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = "ID"][order(ID,decreasing = T)][!duplicated(ID),]
CaseCount
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = "ID"][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
CaseCount
CaseMostICDCount
selectedCase <- merge(CaseCount,CaseMostICDCount,"ID")#[,selectedCase := selectedCaseType]
selectedCase
setnames(selectedCase,"ICD","MostCommonICD")
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID","Gap")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
CaseCount
Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE]#[,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
Case
Case <- DxDataFile[grepl(grepICD,DxDataFile$ICD),][order(ID,Date)]
test<- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE]#[,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
CaseCount
test
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test
CaseCount <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
CaseCount
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),Gap = max(Gap),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)), gap = max(Gap),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE]#[InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)), gap = max(Gap),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test
str(test)
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE]#[InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID","Ga[")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID","Gap")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test
test <- Case[,NextDate := c(Date[-1],NA),by = "ID"][,diffDay := NextDate-Date][,Gap := cumsum(as.integer(diffDay)),by = "ID"][,InTimeINR := Gap >= INRofDayRange[1] & Gap < INRofDayRange[2],][is.na(InTimeINR),InTimeINR := FALSE][InTimeINR == TRUE,list(InTimeINRcount = cumsum(InTimeINR), firstCaseDate = min(Date), endCaseDate = max(Date)),by = c("ID")][order(ID,InTimeINRcount,decreasing = T)][!duplicated(ID),]
test
