mutate(Gap = Date - lag(Date)) %>%
mutate(InTimeINR = Gap >= minimumINRofDays & Gap < maximumINRofDays)
CaseCount$InTimeINR[is.na(CaseCount$InTimeINR)] <- TRUE
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' DxDataFile <- data.frame(ID = c("A", "A", "A", "A"),
#'                          ICD = c("I072","I071", "I072", "I071"),
#'                          Date = as.Date(c("2016-03-31", "2016-01-29", "2016-02-10", "2018-03-10")),
#'                          stringsAsFactors = FALSE)
#' selectCases("^I0", DxDataFile, ID, ICD, Date, "2016-01-01", 2)
#'
# selectCases <- function(greplICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber,icd10usingDate, minimumINRofDays = 30, maximumINRofDays = 365){
selectCases <- function(greplICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- DxDataFile[, c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))]
names(DxDataFile) <- c("ID", "ICD", "Date")
# icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
# icd10$ICD <- convertIcdDecimaltoShort(icd10$ICD, icd10)
# icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
# icd9$ICD <- convertIcdDecimaltoShort(icd9$ICD, icd9)
# if(nrow(icd9) <= 0){
#   DxDataFile <- icd10
# }else if(nrow(icd9) <= 0){
#   DxDataFile <- icd9
# }else{
#   DxDataFile <- full_join(icd9, icd10, by = c("ID", "ICD", "Date"))
# }
CaseCount <- DxDataFile %>% filter(grepl(greplICD, ICD)) %>%
arrange(ID, ICD, Date) %>%
group_by(ID,ICD) %>%
mutate(Gap = Date - lag(Date)) %>%
mutate(InTimeINR = Gap >= minimumINRofDays & Gap < maximumINRofDays)
CaseCount$InTimeINR[is.na(CaseCount$InTimeINR)] <- TRUE
CaseCountInTimeINR <- CaseCount %>% filter(InTimeINR == T) %>%
group_by(ID, ICD) %>%
mutate(CaseNum = cumsum(InTimeINR)) %>%
filter(CaseNum >= ICDNumber) %>%
select(ID,ICD,Date)
CaseCountInTimeINR
}
selectCases("^I0", DxDataFile, ID, ICD, Date, 2)
DxDataFile
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10
icd10$ICD <- convertIcdDecimaltoShort(icd10$ICD, icd10)
icd10
DxDataFile
greplICD <- "^I0"
minimumINRofDays <- 30
maximumINRofDays <- 365
CaseCount <- icd10 %>% filter(grepl(greplICD, ICD)) %>%
arrange(ID, ICD, Date) %>%
group_by(ID,ICD) %>%
mutate(Gap = Date - lag(Date)) %>%
mutate(InTimeINR = Gap >= minimumINRofDays & Gap < maximumINRofDays)
CaseCount$InTimeINR[is.na(CaseCount$InTimeINR)] <- TRUE
CaseCountInTimeINR <- CaseCount %>% filter(InTimeINR == T) %>%
group_by(ID, ICD) %>%
mutate(CaseNum = cumsum(InTimeINR)) %>%
filter(CaseNum >= ICDNumber) %>%
select(ID,ICD,Date)
CaseCountInTimeINR
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' DxDataFile <- data.frame(ID = c("A", "A", "A", "A"),
#'                          ICD = c("I072","I071", "I072", "I071"),
#'                          Date = as.Date(c("2016-03-31", "2016-01-29", "2016-02-10", "2018-03-10")),
#'                          stringsAsFactors = FALSE)
#' selectCases("^I0", DxDataFile, ID, ICD, Date, "2016-01-01", 2)
#'
selectCases <- function(greplICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber,icd10usingDate, minimumINRofDays = 30, maximumINRofDays = 365){
# selectCases <- function(greplICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- DxDataFile[, c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))]
names(DxDataFile) <- c("ID", "ICD", "Date")
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdDecimaltoShort(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdDecimaltoShort(icd9$ICD, icd9)
if(nrow(icd9) <= 0){
combine <- icd10
}else if(nrow(icd9) <= 0){
combine <- icd9
}else{
combine <- full_join(icd9, icd10, by = c("ID", "ICD", "Date"))
}
CaseCount <- combine %>% filter(grepl(greplICD, ICD)) %>%
arrange(ID, ICD, Date) %>%
group_by(ID,ICD) %>%
mutate(Gap = Date - lag(Date)) %>%
mutate(InTimeINR = Gap >= minimumINRofDays & Gap < maximumINRofDays)
CaseCount$InTimeINR[is.na(CaseCount$InTimeINR)] <- TRUE
CaseCountInTimeINR <- CaseCount %>% filter(InTimeINR == T) %>%
group_by(ID, ICD) %>%
mutate(CaseNum = cumsum(InTimeINR)) %>%
filter(CaseNum >= ICDNumber) %>%
select(ID,ICD,Date)
# CaseCount <- DxDataFile %>% filter(grepl(greplICD, ICD)) %>%
#   arrange(ID, ICD, Date) %>%
#   group_by(ID,ICD) %>%
#   mutate(Gap = Date - lag(Date)) %>%
#   mutate(InTimeINR = Gap >= minimumINRofDays & Gap < maximumINRofDays)
#
# CaseCount$InTimeINR[is.na(CaseCount$InTimeINR)] <- TRUE
#
# CaseCountInTimeINR <- CaseCount %>% filter(InTimeINR == T) %>%
#   group_by(ID, ICD) %>%
#   mutate(CaseNum = cumsum(InTimeINR)) %>%
#   filter(CaseNum >= ICDNumber) %>%
#   select(ID,ICD,Date)
CaseCountInTimeINR
}
DxDataFile <- data.frame(ID = c("A", "A", "A", "A"),
ICD = c("I072","I071", "I072", "I071"),
Date = as.Date(c("2016-03-31", "2016-01-29", "2016-02-10", "2018-03-10")),
stringsAsFactors = FALSE)
selectCases("^I0", DxDataFile, ID, ICD, Date, icd10usingDate = "2016-01-01",ICDNumber =  2)
DxDataFile
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdDecimaltoShort(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdDecimaltoShort(icd9$ICD, icd9)
icd10
icd9
nrow(icd9) <= 0
nrow(icd10) <= 0
devtools::document()
devtools::check()
load("~/emr/data/phecode_icd9_2.rda")
#' @param icd10usingDate icd 10 using date
#' @param isPhecodeDescription Phecode/ description for icd9, default is True
#' @export
#' @examples
#' DxDataFile <- data.frame(ID = c("A", "A", "A"),
#'                          ICD = c("6929", "V433", "I350"),
#'                          Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
#'                          stringsAsFactors = FALSE)
#' groupIcdToPhecode(DxDataFile, ID, ICD, Date, "2016-01-01", FALSE)
#'
groupIcdToPhecode <- function(DxDataFile, idColName, icdColName, dateColName, icd10usingDate, isPhecodeDescription = TRUE){
DxDataFile <- DxDataFile[ ,c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))]
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile$ICD <- convertIcdShortToDecimal(DxDataFile$ICD)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdDecimaltoShort(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdDecimaltoShort(icd9$ICD, icd9)
icd9ToPhecode <- left_join(data.frame(ICD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
icd10ToPhecode <- left_join(data.frame(ICD = icd10$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD")  %>%
mutate(ID = icd10$ID) %>% mutate(Date = icd10$Date) %>% unique()
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "Date", "PheCode", "PheCodeDescription"))
DxDataFile_combine_with_originalFile <- left_join(DxDataFile, DxDataFile_combine, by = c("ID", "ICD", "Date"))
if(isPhecodeDescription == T){
IcdToPhecode <- DxDataFile_combine_with_originalFile$PheCodeDescription
}else{
IcdToPhecode <- DxDataFile_combine_with_originalFile$PheCode
}
if(anyNA(IcdToPhecode)){
message(paste0("warning ICD: ", unique(DxDataFile_combine_with_originalFile$ICD[is.na(IcdToPhecode)]), sep = "\t\n"))
warning("'NA' means phecode does not have icd10 or the data does not match the format", call. = F)
}
IcdToPhecode
}
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
View(phecode_icd9_2)
#' @param icd10usingDate icd 10 using date
#' @param isPhecodeDescription Phecode/ description for icd9, default is True
#' @export
#' @examples
#' DxDataFile <- data.frame(ID = c("A", "A", "A"),
#'                          ICD = c("6929", "V433", "I350"),
#'                          Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
#'                          stringsAsFactors = FALSE)
#' groupIcdToPhecode(DxDataFile, ID, ICD, Date, "2016-01-01", FALSE)
#'
groupIcdToPhecode <- function(DxDataFile, idColName, icdColName, dateColName, icd10usingDate, isPhecodeDescription = TRUE){
DxDataFile <- DxDataFile[ ,c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))]
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile$ICD <- convertIcdShortToDecimal(DxDataFile$ICD)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdShortToDecimal(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdShortToDecimal(icd9$ICD, icd9)
icd9ToPhecode <- left_join(data.frame(ICD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
icd10ToPhecode <- left_join(data.frame(ICD = icd10$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD")  %>%
mutate(ID = icd10$ID) %>% mutate(Date = icd10$Date) %>% unique()
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "Date", "PheCode", "PheCodeDescription"))
DxDataFile_combine_with_originalFile <- left_join(DxDataFile, DxDataFile_combine, by = c("ID", "ICD", "Date"))
if(isPhecodeDescription == T){
IcdToPhecode <- DxDataFile_combine_with_originalFile$PheCodeDescription
}else{
IcdToPhecode <- DxDataFile_combine_with_originalFile$PheCode
}
if(anyNA(IcdToPhecode)){
message(paste0("warning ICD: ", unique(DxDataFile_combine_with_originalFile$ICD[is.na(IcdToPhecode)]), sep = "\t\n"))
warning("'NA' means phecode does not have icd10 or the data does not match the format", call. = F)
}
IcdToPhecode
}
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
groupIcdToPhecode(DxDataFile, ID, ICD, Date, "2016-01-01", FALSE)
icd10usingDate <- "2016-01-01"
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdShortToDecimal(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdShortToDecimal(icd9$ICD, icd9)
icd10
icd9ToPhecode <- left_join(data.frame(ICD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
icd10ToPhecode <- left_join(data.frame(ICD = icd10$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD")  %>%
mutate(ID = icd10$ID) %>% mutate(Date = icd10$Date) %>% unique()
icd9ToPhecode
icd10ToPhecode
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "Date", "PheCode", "PheCodeDescription"))
DxDataFile_combine
DxDataFile_combine_with_originalFile <- left_join(DxDataFile, DxDataFile_combine, by = c("ID", "ICD", "Date"))
DxDataFile_combine_with_originalFile
DxDataFile
DxDataFile_combine
load("~/emr/data/icd9withTwoFormat.rda")
View(icd9withTwoFormat)
icd9
icd10
load("~/emr/data/icd10withTwoFormat.rda")
View(icd10withTwoFormat)
icd9ToPhecode
icd10ToPhecode <- left_join(data.frame(ICD = icd10$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICD")  %>%
mutate(ID = icd10$ID) %>% mutate(Date = icd10$Date) %>% unique()
icd10ToPhecode
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "Date", "PheCode", "PheCodeDescription"))
DxDataFile_combine
names(phecode_icd9_2)
names(phecode_icd9_2) <- c("ICDD", "ICDString", "PheCode", "PheCodeDescription", "ExclPhecodes", "ExclPhenotypes", "Rollup", "Leaf", "IgnoreBool")
save(phecode_icd9_2,file="phecode_icd9_2.rda",compress='xz')
load("~/emr/data/phecode_icd9_2.rda")
icd9ToPhecode
left_join(icd9, select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICDD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdShortToDecimal(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdShortToDecimal(icd9$ICD, icd9)
icd9ToPhecode <- left_join(data.frame(ICDD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICD, PheCode, PheCodeDescription),by="ICDD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
icd9ToPhecode <- left_join(data.frame(ICDD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
icd9ToPhecode
left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdShortToDecimal(icd10$ICDD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdShortToDecimal(icd9$ICDD, icd9)
icd9ToPhecode <- left_join(data.frame(ICDD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
phecode_icd9_2
icd9
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICDD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdShortToDecimal(icd10$ICDD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdShortToDecimal(icd9$ICDD, icd9)
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICDD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICDD <- convertIcdShortToDecimal(icd10$ICDD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICDD <- convertIcdShortToDecimal(icd9$ICDD, icd9)
icd9ToPhecode <- left_join(data.frame(ICDD = icd9$ICD, stringsAsFactors = F), select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd9ToPhecode
icd10ToPhecode <- left_join(icd10, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd10ToPhecode
icd9ToPhecode <- left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd9ToPhecode
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICDD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICDD <- convertIcdShortToDecimal(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICDD <- convertIcdShortToDecimal(icd9$ICD, icd9)
icd10
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICD = c("6929", "V433", "I350"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10")),
stringsAsFactors = FALSE)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICDD <- convertIcdShortToDecimal(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICDD <- convertIcdShortToDecimal(icd9$ICD, icd9)
icd10
icd9ToPhecode <- left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd9ToPhecode
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "ICDD", "Date", "PheCode", "PheCodeDescription"))
icd9ToPhecode
icd10ToPhecode
icd10ToPhecode <- left_join(icd10, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd10ToPhecode
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "ICDD", "Date", "PheCode", "PheCodeDescription"))
DxDataFile_combine
DxDataFile_combine_with_originalFile <- left_join(DxDataFile, DxDataFile_combine, by = c("ID", "ICD", "Date"))
DxDataFile_combine_with_originalFile
DxDataFile <- data.frame(ID = c("A", "A", "A"),
ICD = c("6929", "I350","V433"),
Date = as.Date(c("2013-03-31", "2016-01-29", "2013-03-10")),
stringsAsFactors = FALSE)
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICDD <- convertIcdShortToDecimal(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICDD <- convertIcdShortToDecimal(icd9$ICD, icd9)
icd9ToPhecode <- left_join(icd9, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
icd10ToPhecode <- left_join(icd10, select(phecode_icd9_2, ICDD, PheCode, PheCodeDescription),by="ICDD") %>% unique()
DxDataFile_combine <- full_join(icd9ToPhecode, icd10ToPhecode, by = c("ID", "ICD", "ICDD", "Date", "PheCode", "PheCodeDescription"))
DxDataFile_combine
DxDataFile_combine_with_originalFile <- left_join(DxDataFile, DxDataFile_combine, by = c("ID", "ICD", "Date"))
DxDataFile_combine_with_originalFile
IcdToPhecode <- DxDataFile_combine_with_originalFile$PheCodeDescription
IcdToPhecode
IcdToPhecode <- DxDataFile_combine_with_originalFile$PheCode
IcdToPhecode
if(anyNA(IcdToPhecode)){
message(paste0("warning ICD: ", unique(DxDataFile_combine_with_originalFile$ICD[is.na(IcdToPhecode)]), sep = "\t\n"))
warning("'NA' means phecode does not have icd10 or the data does not match the format", call. = F)
}
devtools::document()
devtools::check()
devtools::document()
devtools::check()
load("~/test/data/phecode_icd9_1.rda")
names(phecode_icd9_1) <- c("ICDD", "ICDString", "PheCode", "PheCodeDescription", "ExclPhecodes", "ExclPhenotypes", "Rollup", "Leaf", "IgnoreBool")
save(phecode_icd9_1,file="phecode_icd9_1.rda",compress='xz')
DxDataFile <- data.frame(ID=c("A","A","A"),
ICD=c("6929","V433","I350"),
Date=as.Date(c("2013-03-31","2013-01-29","2016-03-10")),
stringsAsFactors = FALSE)
icd10usingDate <- "2016-01-01"
icd10 <- DxDataFile[DxDataFile$Date >= icd10usingDate,]
icd10$ICD <- convertIcdDecimaltoShort(icd10$ICD, icd10)
icd9 <- DxDataFile[DxDataFile$Date < icd10usingDate,]
icd9$ICD <- convertIcdDecimaltoShort(icd9$ICD, icd9)
icd9ToCCS <- left_join(data.frame(ICD = icd9$ICD, stringsAsFactors = F),
select(ccsDxICD9, ICD,CCS_CATEGORY, CCS_CATEGORY_DESCRIPTION), by = "ICD") %>%
mutate(ID = icd9$ID) %>% mutate(Date = icd9$Date) %>% unique()
icd9ToCCS
left_join(icd9, select(ccsDxICD9, ICD,CCS_CATEGORY, CCS_CATEGORY_DESCRIPTION), by = "ICD") %>% unique()
icd10ToCCS <- left_join(icd10, select(ccsDxICD10, ICD, CCS_CATEGORY, CCS_CATEGORY_DESCRIPTION), by = "ICD") %>% unique()
icd10ToCCS
DxDataFile_combine <- full_join(icd9ToCCS, icd10ToCCS, by = c("ID", "ICD", "Date", "CCS_CATEGORY", "CCS_CATEGORY_DESCRIPTION"))
DxDataFile_combine_with_originalFile <- left_join(DxDataFile, DxDataFile_combine, by = c("ID", "ICD", "Date"))
devtools::document()
devtools::check()
library(icd)
head(uranium_pathology, 10)
uranium_pathology
head(comorbid_charlson(uranium_pathology))
comorbid_charlson(uranium_pathology, return_df = TRUE)[1:5, 1:5]
head(comorbid_charlson(uranium_pathology)) %>% class
comorbid_charlson(uranium_pathology, return_df = TRUE)[1:5, 1:5] %>% class
return_df
comorbid_charlson
comorbid_charlson(uranium_pathology, return_df = TRUE)[1:5,] %>% class
comorbid_charlson(uranium_pathology, return_df = TRUE)[1:5,]
hist(charlson(uranium_pathology))
uranium_pathology
??uranium_pathology
patients_icd9
patients_icd9 <- data.frame(
visit_id = c(1000, 1000, 1000, 1000, 1001, 1001, 1002),
icd9 = as.icd9(c("40201", "2258", "7208", "25001", "34400", "4011", "4011")),
poa = c("Y", NA, "N", "Y", "X", "Y", "E"),
stringsAsFactors = FALSE
)
patients_icd9
comorbid_ahrq(patients_icd9)[, 1:8]
vermont_dx[1:5, c(1, 6:15)]
DeliveryCCSDataLong <- readRDS("~/DeliveryCCSDataLong.rds")
View(DeliveryCCSDataLong)
library(emr)
ccsDxICD10[1:10,]
View(DeliveryCCSDataLong)
setwd("~/emr")
devtools::document()
devtools::document()
devtools::check()
load("~/emr/data/ccsDxICD10.rda")
load("~/emr/data/ccsDxICD9.rda")
View(ccsDxICD9)
devtools::document()
devtools::check()
load("~/emr/data/icd9withTwoFormat.rda")
View(icd9withTwoFormat)
DxDataFile <- data.frame(ID = c("A", "A", "B", "B"),
ICD = c("40201", "42577", "I350", "K289"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10", "2016-03-10")),
stringsAsFactors = FALSE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(emr)
DxDataFile <- data.frame(ID = c("A", "A", "B", "B"),
ICD = c("40201", "42577", "I350", "K289"),
Date = as.Date(c("2013-03-31", "2013-01-29", "2016-03-10", "2016-03-10")),
stringsAsFactors = FALSE)
icd10_map_ccs
setwd("~/emr")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
View(ccsDxICD10)
unique(ccsDxICD9$ICD)
unique(ccsDxICD9$CCS_CATEGORY)
unique(ccsDxICD9$CCS_CATEGORY) %>% length()
unique(ccsDxICD10$CCS_CATEGORY) %>% length()
unique(ccsDxICD10$CCS_CATEGORY) #%>% length()
nchar(ccsDxICD10$CCS_CATEGORY) < 4
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) < 4]
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) < 4] %>% unique
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) < 4] %>% unique %>% length
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) > 4] %>% unique %>% length
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) == 4] %>% unique %>% length
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) == 4] %>% unique #%>% length
View(ccsDxICD9)
ccsDxICD9$CCS_CATEGORY[nchar(ccsDxICD9$CCS_CATEGORY) == 4 & grep("^E",ccsDxICD9$ICD)] #%>% unique #%>% length
grep("^E",ccsDxICD9$ICD)
grepl("^E",ccsDxICD9$ICD)
ccsDxICD9$CCS_CATEGORY[nchar(ccsDxICD9$CCS_CATEGORY) == 4 & grepl("^E",ccsDxICD9$ICD)] #%>% unique #%>% length
ccsDxICD9$CCS_CATEGORY[nchar(ccsDxICD9$CCS_CATEGORY) == 4 & grepl("^E",ccsDxICD9$ICD)] %>% unique #%>% length
ccsDxICD10$CCS_CATEGORY[nchar(ccsDxICD10$CCS_CATEGORY) < 4] %>% unique %>% length
ccsDxICD9$CCS_CATEGORY[nchar(ccsDxICD9$CCS_CATEGORY) < 4 & grepl("^E",ccsDxICD9$ICD)] %>% unique #%>% length
unique(ccsDxICD9$CCS_LVL_1) #%>% length()
unique(ccsDxICD9$CCS_LVL_1) %>% length()
unique(ccsDxICD10$CCS_LVL_1) %>% length()
unique(ccsDxICD10$CCS_LVL_2) %>% length()
unique(ccsDxICD9$CCS_LVL_2) %>% length()
unique(ccsDxICD9$CCS_LVL_2) %>% length()
unique(ccsDxICD9$CCS_LVL_3) %>% length()
unique(ccsDxICD9$CCS_LVL_4) %>% length()
load("~/emr/data/phecode_icd9_2.rda")
unique(phecode_icd9_2$PheCode) %>% length()
convertIcdDecimaltoShort(icd9withTwoFormat$Decimal[1:10], icd9)
icd9withTwoFormat$Decimal[1:10]
setwd("~/emr")
devtools::document()
devtools::check()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::check()
usethis::use_pkgdown()
pkgdown::build_site()
setwd("~/emr")
devtools::document()
devtools::check()
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_github_links()
citation("emr")
template_reference()
comorbid_hcc
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::check()
template_reference()
template_reference(emr)
template_articles()
build_articles()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
library("knitr", lib.loc="~/R/win-library/3.4")
