devtools::check()
pkgdown::build_site()
library("dplyr", lib.loc="~/R/win-library/3.4")
ccsDxICD9$CCS_LVL_2 %>% unique %>% length
admission <- read.csv("~/newborn/ADMISSIONS.csv", stringsAsFactors = F)
admission <- as.data.table(admission[,c("SUBJECT_ID","HADM_ID","ADMITTIME","ADMISSION_TYPE","DIAGNOSIS")])
DIAGNOSIS_ICD <- read.csv("~/newborn/DIAGNOSES_ICD.csv", stringsAsFactors = F)
DIAGNOSIS_ICD <- as.data.table(DIAGNOSIS_ICD) #RAW data
newborn <- admission[grep("NEWBORN",admission$ADMISSION_TYPE),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
Count <- selectCase[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- selectCase[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
View(PDA)
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
Count <- CaseID[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- CaseID[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
PDA1 <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
View(PDA)
View(PDA1)
PDA1 <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)
<-
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
Count <- selectCase[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- selectCase[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)
PDA$selectCase_Long
PDA1$selectCase_Long
PDA1 <- PDA1$selectCase_Long
PDA <- PDA$selectCase_Long
View(PDA)
View(PDA1)
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
Count <- CaseID[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- CaseID[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)
PDA <- PDA$selectCase_Long
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
DxDataFile[,Number:=1:nrow(DxDataFile)]
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
selectCase <- selectCase[order(Number),-"Number"]
Count <- selectCase[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- selectCase[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
Count <- CaseID[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- CaseID[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
PDA1 <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
View(PDA)
View(PDA1)
#test_selectCase
PDA1 <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
#' @param icdColName A column for ICD of DxDataFile
#' @param dateColName A column for Date of DxDataFile
#' @param ICDNumber a threshold of number of ICD for case selection
#' @param minimumINRofDays Minimum interval of Days, defaults is 30 days (one month)
#' @param maximumINRofDays Maximum interval of Days, defaults is 365 days (one year)
#' @export
#' @examples
#' head(sampleDxFile)
#' selectCases("^785", sampleDxFile, ID, ICD, Date, 2)
#'
selectCases <- function(grepICD, DxDataFile, idColName, icdColName, dateColName, ICDNumber, minimumINRofDays = 30, maximumINRofDays = 365){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "MostCommonICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
DxDataFile[,Number:=1:nrow(DxDataFile)]
CaseID <- DxDataFile[grepl(grepICD, DxDataFile$MostCommonICD),]
selectCase <- merge(DxDataFile,CaseID[,"ID"][!duplicated(ID)],by = "ID", nomatch = T)
selectCase <- selectCase[order(Number),-"Number"]
Count <- selectCase[,
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = ID][, period := (endCaseDate - firstCaseDate),][,InTimeINR := period >= minimumINRofDays & period < maximumINRofDays,][count >= ICDNumber & InTimeINR ==TRUE,][,-"InTimeINR"]
CaseICD <- selectCase[,
list(MostCommonICDCount = .N),
by = list(ID,MostCommonICD)][order(MostCommonICDCount,decreasing = T),][!duplicated(ID),]
CaseCount <- merge(Count,CaseICD[,list(ID,MostCommonICD,MostCommonICDCount)],"ID")
return(list(selectCase = selectCase,
selectCase_Long = CaseCount))
}
#test_selectCase
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
nonPDA <- newborn_ICD[!PDA,]
load("~/emr/data/sampleDxFile.rda")
load("~/emr/data/icd9_ahrq.rda")
load("~/emr/data/icd9_charlson.rda")
load("~/emr/data/icd9_elix.rda")
load("~/emr/data/icd10_elix.rda")
load("~/emr/data/icd10_charlson.rda")
load("~/emr/data/icd10_ahrq.rda")
load("~/emr/data/ICD10DxwithTwoFormat.rda")
load("~/emr/data/ICD9DxwithTwoFormat.rda")
#' @source ICD-9-CM Elixhauser (2012-2015)
#' @source \url{https://www.hcup-us.ahrq.gov/toolssoftware/comorbidity/comorbidity.jsp#references}
#' @source ICD-10-CM Elixhauser (2019)
#' @source \url{https://www.hcup-us.ahrq.gov/toolssoftware/comorbidityicd10/comorbidity_icd10.jsp}
#' @examples
#' head(sampleDxFile)
#' IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", charlson)
#' IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", elix)
#' IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", ahrq)
#'
IcdDxToComorbid <- function(DxDataFile, idColName, icdColName, dateColName, icd10usingDate, comorbidMethod){
DxDataFile <- as.data.table(DxDataFile)
DataCol <- c(deparse(substitute(idColName)), deparse(substitute(icdColName)), deparse(substitute(dateColName)))
DxDataFile <- DxDataFile[,DataCol,with = FALSE]
names(DxDataFile) <- c("ID", "ICD", "Date")
DxDataFile[,"Date"] <- as.Date(DxDataFile[,Date])
DxDataFile[,Number:=1:nrow(DxDataFile)]
DxDataFile$Short <- IcdDxDecimalToShort(DxDataFile,ICD,Date,icd10usingDate)$ICD
comorbidMethod <- tolower(deparse(substitute(comorbidMethod)))
if (grepl("ahrq", comorbidMethod)){
comorbidMap9 <- `icd9_ahrq`
comorbidMap10 <- `icd10_ahrq`
}else if(grepl("charlson", comorbidMethod)){
comorbidMap9 <- `icd9_charlson`
comorbidMap10 <- `icd10_charlson`
}else if(grepl("elix", comorbidMethod)){
comorbidMap9 <- `icd9_elix`
comorbidMap10 <- `icd10_elix`
}else{
stop("'please enter AHRQ, Charlson or Elix for 'comorbidMethod'", call. = FALSE)
}
IcdToComorbid <- rbind(merge(DxDataFile[Date <icd10usingDate],comorbidMap9[,list(ICD,Comorbidity)],by.x ="Short",by.y = "ICD",all.x = T),
merge(DxDataFile[Date >=icd10usingDate],comorbidMap10[,list(ICD,Comorbidity)],by.x ="Short",by.y = "ICD",all.x = T))
IcdToComorbid <- IcdToComorbid[order(Number),-"Number"]
IcdToComorbidLong <- IcdToComorbid[!is.na(Comorbidity),
list(firstCaseDate = min(Date),
endCaseDate = max(Date),
count = .N),
by = list(ID,Comorbidity)][,period := (endCaseDate - firstCaseDate),]
return(list(groupedDf = IcdToComorbid,
groupedData_Long = IcdToComorbidLong))
}
charlson <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", charlson)$groupedDf
elix <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", elix)$groupedDf
ahrq <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", ahrq)$groupedDf
View(ahrq)
View(charlson)
View(elix)
ELIX <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", elix)$groupedDf
ELIX$groupedDf[160:164]
ELIX <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", elix)$groupedDf
ELIX$groupedDf[160:164]
ELIX$groupedDf[160:164]
ELIX <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", elix)
ELIX$groupedDf[160:164]
Charlson <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", charlson)
Charlson$groupedDf[160:164]
AHRQ <- IcdDxToComorbid(sampleDxFile, ID, ICD, Date, "2015-10-01", ahrq)
AHRQ$groupedDf[160:164]
install.packages("tableone")
library(tableone)
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedData_Long
nonPDA_Charlson <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", charlson)$groupedData_Long
CreateTableOne(PDA_Charlson)
CreateTableOne(as.data.frame(PDA_Charlson))
PDA_Charlson <- as.data.frame(PDA_Charlson)
CreateTableOne(PDA_Charlson)
pbc
CreateTableOne(pbc)
library(survival)
data(pbc)
CreateTableOne(pbc)
pbc
CreateTableOne(data = pbc)
CreateTableOne(data = PDA_Charlson)
PDA_Charlson
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedDf
PDA_Charlson <- as.data.frame(PDA_Charlson)
CreateTableOne(data = PDA_Charlson)
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedData_Long
nonPDA_Charlson <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", charlson)$groupedData_Long
PDA_AHRQ <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", ahrq)$groupedData_Long
nonPDA_AHRQ <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", ahrq)$groupedData_Long
PDA_Elix <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", Elix)$groupedData_Long
nonPDA_Elix <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", Elix)$groupedData_Long
nonPDA_Charlson <- as.data.frame(nonPDA_Charlson)
CreateTableOne(data = nonPDA_Charlson)
PDA_AHRQ <- as.data.frame(PDA_AHRQ)
CreateTableOne(data = PDA_AHRQ)
nonPDA_AHRQ <- as.data.frame(nonPDA_AHRQ)
CreateTableOne(data = nonPDA_AHRQ)
PDA_Elix <- as.data.frame(PDA_Elix)
CreateTableOne(data = PDA_Elix)
View(nonPDA_AHRQ)
View(pbc)
View(PDA_AHRQ)
PDA_AHRQ1<- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", ahrq)$groupedDf
View(PDA_AHRQ1)
dput(names(PDA_Charlson))
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedData_Long
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedData_Long
PDA_Charlson <- as.data.frame(PDA_Charlson)
dput(names(PDA_Charlson))
PDA_Charlson_col <- c("Comorbidity", "count", "period")
PDA_Charlson_factor <- "Comorbidity"
CreateTableOne(vars = PDA_Charlson_col, data = PDA_Charlson, factorVars = PDA_Charlson_factor)
str(PDA_Charlson)
PDA_Charlson <- as.data.frame(PDA_Charlson)
CreateTableOne(vars = factor_col, data = PDA_Charlson, factorVars = factor_col)
factor_col <- c("Comorbidity")
CreateTableOne(vars = factor_col, data = PDA_Charlson, factorVars = factor_col)
PDA_Charlson
CreateTableOne(vars = factor_col, data = nonPDA_Charlson, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = PDA_AHRQ, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = nonPDA_AHRQ, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = PDA_Elix, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = nonPDA_Elix, factorVars = factor_col)
nonPDA_Elix_tab<- CreateTableOne(vars = factor_col, data = nonPDA_Elix, factorVars = factor_col)
nonPDA_Elix_tab <- CreateTableOne(vars = factor_col, data = nonPDA_Elix, factorVars = factor_col)
print(nonPDA_Elix_tab)
CreateTableOne(vars = factor_col, data = PDA_Charlson, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = nonPDA_Charlson, factorVars = factor_col)
summary(nonPDA_Elix_tab)
View(nonPDA_Elix)
print(nonPDA_Elix_tab)
CreateTableOne(vars = factor_col, data = nonPDA_Elix, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = PDA_Elix, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = nonPDA_AHRQ, factorVars = factor_col)
CreateTableOne(vars = factor_col, data = PDA_AHRQ, factorVars = factor_col)
names(admission)
newborn <- admission[grep("NEWBORN",admission$DIAGNOSIS),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn_byD, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
nonPDA <- newborn_ICD[!PDA,]
View(admission)
View(newborn_ICD)
newborn <- admission[grep("NEWBORN",admission$ADMISSION_TYPE),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
################
newborn <- admission[grep("NEWBORN",admission$DIAGNOSIS),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn_byD, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
View(newborn_ICD)
################
newborn <- admission[grep("NEWBORN",admission$DIAGNOSIS),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn_byD, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
################
newborn <- admission[grep("NEWBORN",admission$DIAGNOSIS),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
nonPDA <- newborn_ICD[!PDA,]
factor_col <- c("Comorbidity")
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedData_Long
PDA_Charlson <- as.data.frame(PDA_Charlson)
CreateTableOne(vars = factor_col, data = PDA_Charlson, factorVars = factor_col)
PDA_Charlson
PDA_Charlson <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", charlson)$groupedData_Long
PDA_Charlson
PDA_Charlson
nonPDA_Charlson <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", charlson)$groupedData_Long
nonPDA_Charlson
nonPDA_Charlson
nonPDA_Charlson <- as.data.frame(nonPDA_Charlson)
CreateTableOne(vars = factor_col, data = nonPDA_Charlson, factorVars = factor_col)
PDA_AHRQ <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", ahrq)$groupedData_Long
PDA_AHRQ
PDA_AHRQ
PDA_AHRQ <- as.data.frame(PDA_AHRQ)
CreateTableOne(vars = factor_col, data = PDA_AHRQ, factorVars = factor_col)
nonPDA_AHRQ <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", ahrq)$groupedData_Long
nonPDA_AHRQ
nonPDA_AHRQ
nonPDA_AHRQ <- as.data.frame(nonPDA_AHRQ)
CreateTableOne(vars = factor_col, data = nonPDA_AHRQ, factorVars = factor_col)
##########
PDA_Elix <- IcdDxToComorbid(PDA, ID, MostCommonICD, Date, "9999-10-01", Elix)$groupedData_Long
PDA_Elix
PDA_Elix
PDA_Elix <- as.data.frame(PDA_Elix)
CreateTableOne(vars = factor_col, data = PDA_Elix, factorVars = factor_col)
nonPDA_Elix <- IcdDxToComorbid(nonPDA, SUBJECT_ID, ICD9_CODE, ADMITTIME, "9999-10-01", Elix)$groupedData_Long
nonPDA_Elix
nonPDA_Elix
nonPDA_Elix <- as.data.frame(nonPDA_Elix)
CreateTableOne(vars = factor_col, data = nonPDA_Elix, factorVars = factor_col)
newborn <- admission[grep("NEWBORN",admission$ADMISSION_TYPE),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
newborn <- admission[grep("NEWBORN",admission$DIAGNOSIS),]
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
#test_selectCase
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
nonPDA <- newborn_ICD[!PDA,]
newborn <- admission[grep("NEWBORN",admission$ADMISSION_TYPE),] #45640
newborn_ICD <- merge(DIAGNOSIS_ICD, newborn, by = c("SUBJECT_ID","HADM_ID"), nomatch = T)
#test_selectCase
PDA <- selectCases(grepICD = "^7470",
newborn_ICD, SUBJECT_ID, ICD9_CODE, ADMITTIME,
ICDNumber = 1,
minimumINRofDays = 0,
maximumINRofDays = 9999999)$selectCase
nonPDA <- newborn_ICD[!PDA,]
