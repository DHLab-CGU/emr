% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_emr.R, R/getConditionEra.R
\name{era}
\alias{era}
\alias{getConditionEra}
\title{Data integration for condition era calculation}
\usage{
getConditionEra(dxDataFile, idColName, icdColName, dateColName,
  icdVerColName = NULL, icd10usingDate = NULL, groupDataType = ccs,
  customGroupingTable, isDescription = TRUE, gapDate = 30,
  selectedCaseFile = NULL)
}
\arguments{
\item{dxDataFile}{A file of clinical diagnostic data with at least 3 columns: "MemberID", "ICD", and "Date"}

\item{idColName}{A column for MemberID of dxDataFile}

\item{icdColName}{A column for ICD of dxDataFile}

\item{dateColName}{A column for Date of dxDataFile}

\item{icdVerColName}{A column for ICD Version used of dxDataFile. If this argument is provided, then icd10usingDate is not needed.}

\item{icd10usingDate}{The date that ICD-10 was started using}

\item{groupDataType}{Four Stratified methods can be chosen: CCS (\code{'ccs'}), CCS levels (\code{'ccslvl1'}, \code{'ccslvl2'}, \code{'ccslvl3'}, \code{'ccslvl4'}), PheWAS (\code{'PheWAS'}), comorbidities (\code{'ahrq'},\code{'charlson'}, \code{'elix'}), precise or fuzzy customized  method (\code{'customGrepIcdGroup'}, \code{'customIcdGroup'}). Change it to any of the other possible variables, default it set to \code{"ccs"}.}

\item{customGroupingTable}{Define the grouping categories. `icdDxToCustom` needs a dataset with two columns: "Group", "ICD"; "Group" defines one or more disease categories and "ICD" defines a list of disease-related ICD codes. `icdDxToCustomGrep`needs a dataset with two columns: "Group", "grepIcd"; "Group" defines one or more disease categories and "grepICD" defines disease-related ICD code character strings containing a regular expression.}

\item{isDescription}{Category or description of standard classification methods for ICD diagnostic codes. The default value is \code{True} (standard description).}

\item{gapDate}{Length of condition gap, By default, it set to 30 days \code{"30"}.}

\item{selectedCaseFile}{Table for selectedCases. Default is \code{'NULL'}}
}
\value{
A new \code{data.table} based on classifying \code{dxDataFile} and calculated condition era by \code{groupDataType} for each patient.
}
\description{
Conditions era is used to integrate distributed data of clinical records into a single progression record
}
\details{
Calculate condition era by grouped categories of each patient. Conditions era is used to integrate distributed data of clinical records into a single progression record when the interval of admission data is smaller than the length of condition gap, and these admission data are considered same condition era.
}
\examples{
# sample file for example

head(sampleDxFile)

# Select case with "Diseases of the urinary system" by level 2 of CCS classification

selectedCaseFile <- selectCases(sampleDxFile, ID, ICD, Date,
                                icd10usingDate = "2015/10/01",
                                groupDataType = ccslvl2,
                                caseCondition = "Diseases of the urinary system",
                                caseCount = 1)

# Condition era calculation with case selection

Era1 <- getConditionEra(sampleDxFile, ID, ICD, Date, icd10usingDate = "2015-10-01",
                        groupDataType = CCSlvl3,
                        selectedCaseFile = selectedCaseFile)

# Define the grouping categories

grepTable <- data.frame(Group = "Chronic kidney disease",
                        grepIcd = "^58|^N18",
                        stringsAsFactors = FALSE)

# Condition era calculation with grouping custom method of code standardization

Era2 <- getConditionEra(sampleDxFile, ID, ICD, Date, icd10usingDate = "2015-10-01",
                        groupDataType = customGrepIcdGroup,
                        customGroupingTable = grepTable)
head(Era1)
head(Era2)
}
\seealso{
Other data integration functions: \code{\link{selectCases}}, \code{\link{dataSplit}}, \code{\link{recordPeriod}}
}
